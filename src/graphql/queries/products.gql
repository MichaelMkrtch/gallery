query GetAllProducts(
  $first: Int = 12
  $after: String
  $imagesFirst: Int = 1
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $genreKey: String = "genre"
  $typeKey: String = "type"
  $mediumKey: String = "medium"
  $dimensionsKey: String = "dimensions"
) {
  products(first: $first, after: $after) {
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      cursor
      node {
        id
        title
        handle
        createdAt
        descriptionHtml
        images(first: $imagesFirst) {
          edges {
            node {
              id
              url
              altText
              width
              height
            }
          }
        }
        priceRange {
          minVariantPrice {
            amount
            currencyCode
          }
        }
        artist: metafield(namespace: $metafieldNamespace, key: $artistKey) {
          value
          type
        }
        genre: metafield(namespace: $metafieldNamespace, key: $genreKey) {
          value
          type
        }
        type: metafield(namespace: $metafieldNamespace, key: $typeKey) {
          value
          type
        }
        medium: metafield(namespace: $metafieldNamespace, key: $mediumKey) {
          value
          type
        }
        dimensions: metafield(
          namespace: $metafieldNamespace
          key: $dimensionsKey
        ) {
          value
          type
        }
      }
    }
  }
}

query GetRecentProducts(
  $first: Int = 6
  $sortKey: ProductSortKeys = CREATED_AT
  $reverse: Boolean = true
  $imagesFirst: Int = 1
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $genreKey: String = "genre"
  $typeKey: String = "type"
  $mediumKey: String = "medium"
  $dimensionsKey: String = "dimensions"
) {
  products(first: $first, sortKey: $sortKey, reverse: $reverse) {
    edges {
      cursor
      node {
        id
        title
        handle
        createdAt
        descriptionHtml
        images(first: $imagesFirst) {
          edges {
            node {
              id
              url
              altText
              width
              height
            }
          }
        }
        priceRange {
          minVariantPrice {
            amount
            currencyCode
          }
        }
        artist: metafield(namespace: $metafieldNamespace, key: $artistKey) {
          value
          type
        }
        genre: metafield(namespace: $metafieldNamespace, key: $genreKey) {
          value
          type
        }
        type: metafield(namespace: $metafieldNamespace, key: $typeKey) {
          value
          type
        }
        medium: metafield(namespace: $metafieldNamespace, key: $mediumKey) {
          value
          type
        }
        dimensions: metafield(
          namespace: $metafieldNamespace
          key: $dimensionsKey
        ) {
          value
          type
        }
      }
    }
  }
}

query GetCollectionProducts(
  $collectionHandle: String!
  $productsFirst: Int = 12
  $productsAfter: String
  $imagesFirst: Int = 1
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $genreKey: String = "genre"
  $typeKey: String = "type"
  $mediumKey: String = "medium"
  $dimensionsKey: String = "dimensions"
) {
  collectionByHandle(handle: $collectionHandle) {
    products(first: $productsFirst, after: $productsAfter) {
      pageInfo {
        hasNextPage
        endCursor
      }
      edges {
        cursor
        node {
          id
          title
          handle
          createdAt
          descriptionHtml
          images(first: $imagesFirst) {
            edges {
              node {
                id
                url
                altText
                width
                height
              }
            }
          }
          priceRange {
            minVariantPrice {
              amount
              currencyCode
            }
          }
          artist: metafield(namespace: $metafieldNamespace, key: $artistKey) {
            value
            type
          }
          genre: metafield(namespace: $metafieldNamespace, key: $genreKey) {
            value
            type
          }
          type: metafield(namespace: $metafieldNamespace, key: $typeKey) {
            value
            type
          }
          medium: metafield(namespace: $metafieldNamespace, key: $mediumKey) {
            value
            type
          }
          dimensions: metafield(
            namespace: $metafieldNamespace
            key: $dimensionsKey
          ) {
            value
            type
          }
        }
      }
    }
  }
}

query GetProduct(
  $handle: String!
  $imagesFirst: Int = 6
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $genreKey: String = "genre"
  $typeKey: String = "type"
  $mediumKey: String = "medium"
  $dimensionsKey: String = "dimensions"
) {
  products(first: 1, query: $handle) {
    edges {
      cursor
      node {
        id
        title
        handle
        createdAt
        descriptionHtml
        images(first: $imagesFirst) {
          edges {
            node {
              id
              url
              altText
              width
              height
            }
          }
        }
        priceRange {
          minVariantPrice {
            amount
            currencyCode
          }
        }
        artist: metafield(namespace: $metafieldNamespace, key: $artistKey) {
          value
          type
        }
        genre: metafield(namespace: $metafieldNamespace, key: $genreKey) {
          value
          type
        }
        type: metafield(namespace: $metafieldNamespace, key: $typeKey) {
          value
          type
        }
        medium: metafield(namespace: $metafieldNamespace, key: $mediumKey) {
          value
          type
        }
        dimensions: metafield(
          namespace: $metafieldNamespace
          key: $dimensionsKey
        ) {
          value
          type
        }
      }
    }
  }
}
